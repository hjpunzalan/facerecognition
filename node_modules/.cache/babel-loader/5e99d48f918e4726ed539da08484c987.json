{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageInputLinkForm from './components/ImageInputLinkForm/ImageInputLinkForm';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport particleconfig from './particleconfig';\nimport Clarifai from 'clarifai';\nvar app = new Clarifai.App({\n  apiKey: 'bc16c17efb7149c6be47b7366fdd88b7'\n});\nvar initialState = {\n  input: '',\n  imageUrl: '',\n  box: '{}',\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      for (var i = 0; i < data.length; i++) {\n        var _clarifaiFace = data.outputs[i].data.regions[i].region_info.bounding_box;\n      }\n\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        //margin from left of image\n        topRow: clarifaiFace.top_row * height,\n        //margin from top of image\n        rightCol: width - clarifaiFace.right_col * width,\n        //margin from right of image\n        bottomRow: height - clarifaiFace.bottom_row * height //margin from bottom of image\n\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      //box will be a border relative to the image based on the position given\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onPictureSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: _this.state.user.id\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (count) {\n            //response entries that goes up from server\n            _this.setState(Object.assign(_this.state.user, {\n              entries: count\n            })); // if we refer to user as object we are setstating all the parameters within, but if its just one then we use object assign\n\n          }).catch(console.log);\n        }\n\n        _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        //navigation bar\n        _this.setState(initialState);\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('http://localhost:3000').then(function (response) {\n        return response.json();\n      }).then(console.log); // dont need a parameter as it will console log all data like this\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route,\n          box = _this$state.box,\n          imageUrl = _this$state.imageUrl;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particleconfig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), route === 'home' ? //Home          \n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(ImageInputLinkForm, {\n        onInputChange: this.onInputChange,\n        onPictureSubmit: this.onPictureSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })) : //Signin + Register\n      route === 'signin' ? //Signin\n      React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }) : //Register\n      React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"bottom--2 { bottom: -2rem; }\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Created by: Jonathan P\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\New User\\Desktop\\Projects\\facerecognition\\src\\App.js"],"names":["React","Component","Signin","Register","FaceRecognition","Navigation","Logo","ImageInputLinkForm","Rank","Particles","particleconfig","Clarifai","app","App","apiKey","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","loadUser","data","setState","calculateFaceLocation","i","length","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onPictureSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAAjB,CAAZ;AAIA,IAAMC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,GAAG,EAAC,IAHW;AAIfC,EAAAA,KAAK,EAAC,QAJS;AAKfC,EAAAA,UAAU,EAAE,KALG;AAMfC,EAAAA,IAAI,EAAE;AACEC,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,OAAO,EAAE,CAJX;AAKEC,IAAAA,MAAM,EAAE;AALV;AANS,CAArB;;IAeMb,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAKZc,QALY,GAKD,UAACC,IAAD,EAAU;AACnB,YAAKC,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAE;AACnBC,UAAAA,EAAE,EAAEM,IAAI,CAACN,EADU;AAEpBC,UAAAA,IAAI,EAAEK,IAAI,CAACL,IAFS;AAGpBC,UAAAA,KAAK,EAAEI,IAAI,CAACJ,KAHQ;AAIpBC,UAAAA,OAAO,EAAEG,IAAI,CAACH,OAJM;AAKpBC,UAAAA,MAAM,EAAEE,IAAI,CAACF;AALO;AAAR,OAAd;AAOM,KAbI;;AAAA,UAeZI,qBAfY,GAeY,UAACF,IAAD,EAAU;AACjC,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAME,aAAY,GAAGL,IAAI,CAACM,OAAL,CAAaH,CAAb,EAAgBH,IAAhB,CAAqBO,OAArB,CAA6BJ,CAA7B,EAAgCK,WAAhC,CAA4CC,YAAjE;AACD;;AACF,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,aAAO;AACLC,QAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD5B;AACmC;AACxCK,QAAAA,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAF1B;AAEiC;AACtCK,QAAAA,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHvC;AAG8C;AACnDS,QAAAA,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR,MAJ1C,CAIiD;;AAJjD,OAAP;AAOD,KA7BW;;AAAA,UA+BZS,cA/BY,GA+BK,UAAClC,GAAD,EAAS;AAAE;AAC1B,YAAKW,QAAL,CAAc;AAACX,QAAAA,GAAG,EAACA;AAAL,OAAd;AACD,KAjCW;;AAAA,UAmCZmC,aAnCY,GAmCI,UAACC,KAAD,EAAW;AACzB,YAAKzB,QAAL,CAAc;AAACb,QAAAA,KAAK,EAAEsC,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAd;AACD,KArCW;;AAAA,UAuCZC,eAvCY,GAuCM,YAAM;AACtB,YAAK5B,QAAL,CAAc;AAACZ,QAAAA,QAAQ,EAAE,MAAKyC,KAAL,CAAW1C;AAAtB,OAAd;;AACFJ,MAAAA,GAAG,CAAC+C,MAAJ,CAAWC,OAAX,CAAmBjD,QAAQ,CAACkD,iBAA5B,EAA+C,MAAKH,KAAL,CAAW1C,KAA1D,EACG8C,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,YAAIA,QAAJ,EAAc;AAChBC,UAAAA,KAAK,CAAC,6BAAD,EAAgC;AACrCC,YAAAA,MAAM,EAAE,KAD6B;AAErCC,YAAAA,OAAO,EAAE;AAAC,8BAAe;AAAhB,aAF4B;AAGrCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB/C,cAAAA,EAAE,EAAE,MAAKoC,KAAL,CAAWrC,IAAX,CAAgBC;AADD,aAAf;AAH+B,WAAhC,CAAL,CAOCwC,IAPD,CAOM,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACO,IAAT,EAAJ;AAAA,WAPd,EAQCR,IARD,CAQM,UAAAS,KAAK,EAAI;AAAE;AACf,kBAAK1C,QAAL,CAAc2C,MAAM,CAACC,MAAP,CAAc,MAAKf,KAAL,CAAWrC,IAAzB,EAA+B;AAACI,cAAAA,OAAO,EAAE8C;AAAV,aAA/B,CAAd,EADa,CACmD;;AACjE,WAVD,EAWCG,KAXD,CAWOC,OAAO,CAACC,GAXf;AAYD;;AACK,cAAKxB,cAAL,CAAoB,MAAKtB,qBAAL,CAA2BiC,QAA3B,CAApB;AACH,OAjBH,EAkBGW,KAlBH,CAkBS,UAAAG,GAAG;AAAA,eAAGF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAH;AAAA,OAlBZ;AAmBC,KA5DW;;AAAA,UA+DZC,aA/DY,GA+DI,UAAC3D,KAAD,EAChB;AACI,UAAIA,KAAK,KAAK,SAAd,EAAwB;AAAE;AACxB,cAAKU,QAAL,CAAcd,YAAd;AACD,OAFD,MAEO,IAAII,KAAK,KAAK,MAAd,EAAqB;AAC1B,cAAKU,QAAL,CAAc;AAACT,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD;;AACH,YAAKS,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAEA;AAAR,OAAd;AAED,KAxEW;;AAEZ,UAAKuC,KAAL,GAAa3C,YAAb;AAFY;AAGf;;;;wCAsEyB;AACtBiD,MAAAA,KAAK,CAAC,uBAAD,CAAL,CACCF,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACO,IAAT,EAAJ;AAAA,OADd,EAECR,IAFD,CAEMa,OAAO,CAACC,GAFd,EADsB,CAGH;AACpB;;;6BAEY;AAAA,wBACoC,KAAKlB,KADzC;AAAA,UACDtC,UADC,eACDA,UADC;AAAA,UACWD,KADX,eACWA,KADX;AAAA,UACkBD,GADlB,eACkBA,GADlB;AAAA,UACuBD,QADvB,eACuBA,QADvB;AAEP,aAEH;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AAAiC,QAAA,MAAM,EAAEP,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAE,KAAKoE,aAAhC;AAA+C,QAAA,UAAU,EAAE1D,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,EAGOD,KAAK,KAAK,MAAV,GACD;AACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKuC,KAAL,CAAWrC,IAAX,CAAgBE,IAA5B;AAAkC,QAAA,OAAO,EAAE,KAAKmC,KAAL,CAAWrC,IAAX,CAAgBI,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,kBAAD;AACC,QAAA,aAAa,EAAE,KAAK4B,aADrB;AAEC,QAAA,eAAe,EAAE,KAAKI,eAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAMG,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAEvC,GAAtB;AAA2B,QAAA,QAAQ,EAAED,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANH,CAFA,GAUD;AAECE,MAAAA,KAAK,KAAK,QAAV,GACE;AACA,0BAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKQ,QAAvB;AAAiC,QAAA,aAAa,EAAE,KAAKmD,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,GAGE;AACD,0BAAC,QAAD;AAAU,QAAA,aAAa,EAAE,KAAKA,aAA9B;AAA6C,QAAA,QAAQ,EAAE,KAAKnD,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBR,EAsBM;AAAG,QAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAtBN,CAFG;AA4BD;;;;EA9GW1B,S;;AAiHd,eAAeY,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageInputLinkForm from './components/ImageInputLinkForm/ImageInputLinkForm';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport particleconfig from './particleconfig';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: 'bc16c17efb7149c6be47b7366fdd88b7'\n});\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box:'{}',\n      route:'signin',\n      isSignedIn: false,\n      user: {\n              id: '',\n              name: '',\n              email: '',\n              entries: 0,\n              joined: '',\n      }\n    }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n}\n\n    loadUser = (data) => {\n      this.setState({ user: {\n         id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n\n        }})}\n\n    calculateFaceLocation = (data) => {\n     for (let i = 0; i < data.length; i++) {\n         const clarifaiFace = data.outputs[i].data.regions[i].region_info.bounding_box;\n       }\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width, //margin from left of image\n        topRow: clarifaiFace.top_row * height,//margin from top of image\n        rightCol: width - (clarifaiFace.right_col * width),//margin from right of image\n        bottomRow: height - (clarifaiFace.bottom_row * height)//margin from bottom of image\n\n      }\n    }\n\n    displayFaceBox = (box) => { //box will be a border relative to the image based on the position given\n      this.setState({box:box});\n    }\n\n    onInputChange = (event) => {\n      this.setState({input: event.target.value});\n    }\n\n    onPictureSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if (response) {\n      fetch('http://localhost:3000/image', {\n      method: 'put',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({\n        id: this.state.user.id\n      })\n       })\n      .then(response => response.json())\n      .then(count => { //response entries that goes up from server\n        this.setState(Object.assign(this.state.user, {entries: count})) // if we refer to user as object we are setstating all the parameters within, but if its just one then we use object assign\n      })\n      .catch(console.log);\n    }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err =>console.log(err));\n    }\n\n\n    onRouteChange = (route) => \n    {\n        if (route === 'signout'){ //navigation bar\n          this.setState(initialState);\n        } else if (route === 'home'){\n          this.setState({isSignedIn: true});\n        } \n      this.setState({route: route});\n        \n    }\n      componentDidMount() {\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log) // dont need a parameter as it will console log all data like this\n  }\n\n      render() {\n      const { isSignedIn, route, box, imageUrl } = this.state;\n        return (\n        \n     <div className=\"App\">\n        <Particles className='particles' params={particleconfig}/>\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n          { route === 'home' \n          ?//Home          \n            <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageInputLinkForm \n               onInputChange={this.onInputChange} \n               onPictureSubmit={this.onPictureSubmit}/>\n               <FaceRecognition box={box} imageUrl={imageUrl} />\n               </div>\n          ://Signin + Register\n         (\n            route === 'signin'\n            ? //Signin\n              <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : //Register\n             <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n           }\n           <p className='bottom--2 { bottom: -2rem; }'>Created by: Jonathan P</p>\n          </div>\n        );\n      \n      }\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}