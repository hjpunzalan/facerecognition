{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageInputLinkForm from './components/ImageInputLinkForm/ImageInputLinkForm';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport particleconfig from './particleconfig';\nimport Clarifai from 'clarifai';\nvar app = new Clarifai.App({\n  apiKey: 'bc16c17efb7149c6be47b7366fdd88b7'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        //margin from left of image\n        topRow: clarifaiFace.top_row * height,\n        //margin from top of image\n        rightCol: width - clarifaiFace.right_col * width,\n        //margin from right of image\n        bottomRow: height - clarifaiFace.bottom_row * height //margin from bottom of image\n\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      //box will be a border relative to the image based on the position given\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        return _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        //navigation bar\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: '{}',\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('http://localhost:3000').then(function (response) {\n        return response.json();\n      }).then(console.log); // dont need a parameter as it will console log all data like this\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route,\n          box = _this$state.box,\n          imageUrl = _this$state.imageUrl;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particleconfig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), route === 'home' ? //Home          \n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(ImageInputLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })) : //Signin + Register\n      route === 'signin' ? //Signin\n      React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }) : //Register\n      React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\New User\\Desktop\\Projects\\facerecognition\\src\\App.js"],"names":["React","Component","Signin","Register","FaceRecognition","Navigation","Logo","ImageInputLinkForm","Rank","Particles","particleconfig","Clarifai","app","App","apiKey","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","isSignedIn","fetch","json"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageInputLinkForm from './components/ImageInputLinkForm/ImageInputLinkForm';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport particleconfig from './particleconfig';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: 'bc16c17efb7149c6be47b7366fdd88b7'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:'{}',\n      route:'signin',\n      isSignedIn: false,\n      user: {\n              id: '',\n              name: '',\n              email: '',\n              entries: 0,\n              joined: '',\n      }}}\n\n    loadUser = (data) => {\n      this.setState({ user: {\n         id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n\n        }})}\n\n    calculateFaceLocation = (data) => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width, //margin from left of image\n        topRow: clarifaiFace.top_row * height,//margin from top of image\n        rightCol: width - (clarifaiFace.right_col * width),//margin from right of image\n        bottomRow: height - (clarifaiFace.bottom_row * height)//margin from bottom of image\n\n      }\n    }\n\n    displayFaceBox = (box) => { //box will be a border relative to the image based on the position given\n      this.setState({box:box});\n    }\n\n    onInputChange = (event) => {\n      this.setState({input: event.target.value});\n    }\n\n    onButtonSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err =>console.log(err));\n    }\n    onRouteChange = (route) => \n    {\n        if (route === 'signout'){ //navigation bar\n          this.setState({isSignedIn: false});\n        } else if (route === 'home'){\n          this.setState({isSignedIn: true});\n        } \n      this.setState({route: route});\n        \n    }\n      componentDidMount() {\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log) // dont need a parameter as it will console log all data like this\n  }\n\n      render() {\n      const { isSignedIn, route, box, imageUrl } = this.state;\n        return (\n        \n     <div className=\"App\">\n        <Particles className='particles' params={particleconfig}/>\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n          { route === 'home' \n          ?//Home          \n            <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageInputLinkForm \n               onInputChange={this.onInputChange} \n               onButtonSubmit={this.onButtonSubmit}/>\n               <FaceRecognition box={box} imageUrl={imageUrl} />\n               </div>\n          ://Signin + Register\n         (\n            route === 'signin'\n            ? //Signin\n              <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : //Register\n             <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n           }\n          </div>\n        );\n      \n      }\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}