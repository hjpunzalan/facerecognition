{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\New User\\\\Desktop\\\\Projects\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageInputLinkForm from './components/ImageInputLinkForm/ImageInputLinkForm';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport particleconfig from './particleconfig';\nvar initialState = {\n  input: '',\n  imageUrl: '',\n  box: '{}',\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions.map(function (array) {\n        return array.region_info.bounding_box;\n      });\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      var output = clarifaiFace.map(function (regions) {\n        return {\n          leftCol: regions.left_col * width,\n          //margin from left of image\n          topRow: regions.top_row * height,\n          //margin from top of image\n          rightCol: width - regions.right_col * width,\n          //margin from right of image\n          bottomRow: height - regions.bottom_row * height //margin from bottom of image\n\n        };\n      });\n      return output;\n    };\n\n    _this.displayFaceBox = function (box) {\n      //box will be a border relative to the image based on the position given\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onPictureSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      fetch('http://localhost:3000/image', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: _this.state.input\n        })\n      }).then(function (response) {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: _this.state.user.id\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (count) {\n            //response entries that goes up from server\n            _this.setState(Object.assign(_this.state.user, {\n              entries: count\n            })); // if we refer to user as object we are setstating all the parameters within, but if its just one then we use object assign\n\n          }).catch(console.log);\n        }\n\n        _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        //navigation bar\n        _this.setState(initialState);\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('http://localhost:3000').then(function (response) {\n        return response.json();\n      }).then(console.log); // dont need a parameter as it will console log all data like this\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route,\n          box = _this$state.box,\n          imageUrl = _this$state.imageUrl;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particleconfig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), route === 'home' ? //Home          \n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(ImageInputLinkForm, {\n        onInputChange: this.onInputChange,\n        onPictureSubmit: this.onPictureSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })) : //Signin + Register\n      route === 'signin' ? //Signin\n      React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }) : //Register\n      React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"bottom--2 { bottom: -2rem; }\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Created by: Jonathan P\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\New User\\Desktop\\Projects\\facerecognition\\src\\App.js"],"names":["React","Component","Signin","Register","FaceRecognition","Navigation","Logo","ImageInputLinkForm","Rank","Particles","particleconfig","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","map","array","region_info","bounding_box","image","document","getElementById","width","Number","height","output","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onPictureSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageInputLinkForm from './components/ImageInputLinkForm/ImageInputLinkForm';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport particleconfig from './particleconfig';\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box:'{}',\n      route:'signin',\n      isSignedIn: false,\n      user: {\n              id: '',\n              name: '',\n              email: '',\n              entries: 0,\n              joined: '',\n      }\n    }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n}\n\n    loadUser = (data) => {\n      this.setState({ user: {\n         id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n\n        }})}\n\n    calculateFaceLocation = (data) => {\n\n    const clarifaiFace = data.outputs[0].data.regions.map(array => {\n      return array.region_info.bounding_box;\n    });\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const output = clarifaiFace.map(regions => {\n        return {\n        leftCol: regions.left_col * width, //margin from left of image\n        topRow: regions.top_row * height,//margin from top of image\n        rightCol: width - (regions.right_col * width),//margin from right of image\n        bottomRow: height - (regions.bottom_row * height)//margin from bottom of image\n        }\n      })\n      return output;\n    }\n\n    displayFaceBox = (box) => { //box will be a border relative to the image based on the position given\n      this.setState({box:box});\n    }\n\n    onInputChange = (event) => {\n      this.setState({input: event.target.value});\n    }\n\n    onPictureSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n      fetch('http://localhost:3000/image', {\n              method: 'post',\n              headers: {'Content-Type':'application/json'},\n              body: JSON.stringify({\n                input: this.state.input\n      })\n       })\n      .then(response => {\n        if (response) {\n      fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n      })\n       })\n      .then(response => response.json())\n      .then(count => { //response entries that goes up from server\n        this.setState(Object.assign(this.state.user, {entries: count})) // if we refer to user as object we are setstating all the parameters within, but if its just one then we use object assign\n      })\n      .catch(console.log);\n    }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err =>console.log(err));\n    }\n\n\n    onRouteChange = (route) => \n    {\n        if (route === 'signout'){ //navigation bar\n          this.setState(initialState);\n        } else if (route === 'home'){\n          this.setState({isSignedIn: true});\n        } \n      this.setState({route: route});\n        \n    }\n      componentDidMount() {\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log) // dont need a parameter as it will console log all data like this\n  }\n\n      render() {\n      const { isSignedIn, route, box, imageUrl } = this.state;\n        return (\n        \n     <div className=\"App\">\n        <Particles className='particles' params={particleconfig}/>\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n          { route === 'home' \n          ?//Home          \n            <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageInputLinkForm \n               onInputChange={this.onInputChange} \n               onPictureSubmit={this.onPictureSubmit}/>\n               <FaceRecognition box={box} imageUrl={imageUrl} />\n               </div>\n          ://Signin + Register\n         (\n            route === 'signin'\n            ? //Signin\n              <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : //Register\n             <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n           }\n           <p className='bottom--2 { bottom: -2rem; }'>Created by: Jonathan P</p>\n          </div>\n        );\n      \n      }\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}